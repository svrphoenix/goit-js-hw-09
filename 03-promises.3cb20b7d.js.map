{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,UAClCE,WAAYH,SAASC,cAAc,qBACnCG,UAAWJ,SAASC,cAAc,oBAClCI,YAAaL,SAASC,cAAc,uBAKtC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAM,GAE1BA,EAAA,GAEP,CAbAV,EAAKC,KAAKgB,iBAAiB,UAe3B,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMlB,KAAEA,EAAII,WAAEA,EAAUC,UAAEA,EAASC,YAAEA,GAAgBP,EACrD,IAAIoB,EAAgBC,OAAOhB,EAAWiB,OACtC,MAAMC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAClC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGL,GACdM,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBZ,EAAA6B,OAAOC,QAAQ,uBAAuBnB,QAAeC,MAAS,IAE/DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBZ,EAAA6B,OAAOG,QAAQ,sBAAsBrB,QAAeC,MAAS,IAEjEU,GAAiBG,EAEnBtB,EAAK8B,OACP,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btnSubmit: document.querySelector('button'),\n  delayInput: document.querySelector('input[name=delay]'),\n  stepInput: document.querySelector('input[name=step]'),\n  amountInput: document.querySelector('input[name=amount]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { form, delayInput, stepInput, amountInput } = refs;\n  let delayDuration = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayDuration)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayDuration += step;\n  };\n  form.reset();\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btnSubmit","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delayDuration","Number","value","step","amount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.3cb20b7d.js.map"}